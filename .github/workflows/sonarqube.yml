name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Run Tests and Analyze with SonarCloud
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      POSTGRES_DB: test_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      SECRET_KEY: fake-key-for-testing
      DEBUG: "True"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./server/requirements.txt
          pip install pytest pytest-cov

      - name: Create .env file
        run: |
          {
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}"
            echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}"
            echo "DB_NAME=${{ secrets.DB_NAME }}"
            echo "DB_USER=${{ secrets.DB_USER }}"
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
            echo "DB_HOST=${{ secrets.DB_HOST }}"
            echo "DB_PORT=${{ secrets.DB_PORT }}"
            echo "TEST_PASSWORD=${{ secrets.TEST_PASSWORD }}"
          } > .env
        shell: bash

      - name: Run tests with coverage
        run: |
          pytest server/backend
          
      - name: Upload coverage report to SonarCloud
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}

      - name: SonarCloud Scan
        run: |
          sonar-scanner
